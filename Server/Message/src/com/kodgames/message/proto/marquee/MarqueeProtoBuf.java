// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/marquee.proto

package com.kodgames.message.proto.marquee;

public final class MarqueeProtoBuf {
  private MarqueeProtoBuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MarqueePROTOOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 id = 1;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 跑马灯ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 跑马灯ID
     * </pre>
     */
    long getId();

    // required string msg = 2;
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     * 跑马灯内容
     * </pre>
     */
    boolean hasMsg();
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     * 跑马灯内容
     * </pre>
     */
    java.lang.String getMsg();
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     * 跑马灯内容
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    // required int32 type = 3;
    /**
     * <code>required int32 type = 3;</code>
     *
     * <pre>
     * 类型  2:绝对时间一次发送  3:按设定重复发送
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 3;</code>
     *
     * <pre>
     * 类型  2:绝对时间一次发送  3:按设定重复发送
     * </pre>
     */
    int getType();

    // optional int32 weeklyRepeat = 4;
    /**
     * <code>optional int32 weeklyRepeat = 4;</code>
     *
     * <pre>
     * 每周重复 一周从周日开始 后7位进行标识 0000000~1111111用于表示周几会显示
     * </pre>
     */
    boolean hasWeeklyRepeat();
    /**
     * <code>optional int32 weeklyRepeat = 4;</code>
     *
     * <pre>
     * 每周重复 一周从周日开始 后7位进行标识 0000000~1111111用于表示周几会显示
     * </pre>
     */
    int getWeeklyRepeat();

    // optional int64 absoluteDate = 5;
    /**
     * <code>optional int64 absoluteDate = 5;</code>
     *
     * <pre>
     * 绝对时间发送的日期 具体时间 毫秒值
     * </pre>
     */
    boolean hasAbsoluteDate();
    /**
     * <code>optional int64 absoluteDate = 5;</code>
     *
     * <pre>
     * 绝对时间发送的日期 具体时间 毫秒值
     * </pre>
     */
    long getAbsoluteDate();

    // repeated int64 hourAndMinute = 6;
    /**
     * <code>repeated int64 hourAndMinute = 6;</code>
     *
     * <pre>
     * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
     * </pre>
     */
    java.util.List<java.lang.Long> getHourAndMinuteList();
    /**
     * <code>repeated int64 hourAndMinute = 6;</code>
     *
     * <pre>
     * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
     * </pre>
     */
    int getHourAndMinuteCount();
    /**
     * <code>repeated int64 hourAndMinute = 6;</code>
     *
     * <pre>
     * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
     * </pre>
     */
    long getHourAndMinute(int index);

    // optional int32 rollTimes = 7;
    /**
     * <code>optional int32 rollTimes = 7;</code>
     *
     * <pre>
     * 滚动次数
     * </pre>
     */
    boolean hasRollTimes();
    /**
     * <code>optional int32 rollTimes = 7;</code>
     *
     * <pre>
     * 滚动次数
     * </pre>
     */
    int getRollTimes();

    // optional int32 intervalTime = 8;
    /**
     * <code>optional int32 intervalTime = 8;</code>
     *
     * <pre>
     * 间隔时间秒
     * </pre>
     */
    boolean hasIntervalTime();
    /**
     * <code>optional int32 intervalTime = 8;</code>
     *
     * <pre>
     * 间隔时间秒
     * </pre>
     */
    int getIntervalTime();

    // optional string color = 9;
    /**
     * <code>optional string color = 9;</code>
     *
     * <pre>
     * 颜色
     * </pre>
     */
    boolean hasColor();
    /**
     * <code>optional string color = 9;</code>
     *
     * <pre>
     * 颜色
     * </pre>
     */
    java.lang.String getColor();
    /**
     * <code>optional string color = 9;</code>
     *
     * <pre>
     * 颜色
     * </pre>
     */
    com.google.protobuf.ByteString
        getColorBytes();

    // required int32 showType = 10;
    /**
     * <code>required int32 showType = 10;</code>
     *
     * <pre>
     * 可以显示的场景
     * </pre>
     */
    boolean hasShowType();
    /**
     * <code>required int32 showType = 10;</code>
     *
     * <pre>
     * 可以显示的场景
     * </pre>
     */
    int getShowType();
  }
  /**
   * Protobuf type {@code com.kodgames.message.proto.marquee.MarqueePROTO}
   */
  public static final class MarqueePROTO extends
      com.google.protobuf.GeneratedMessage
      implements MarqueePROTOOrBuilder {
    // Use MarqueePROTO.newBuilder() to construct.
    private MarqueePROTO(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MarqueePROTO(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MarqueePROTO defaultInstance;
    public static MarqueePROTO getDefaultInstance() {
      return defaultInstance;
    }

    public MarqueePROTO getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MarqueePROTO(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              msg_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              type_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              weeklyRepeat_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              absoluteDate_ = input.readInt64();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                hourAndMinute_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              hourAndMinute_.add(input.readInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                hourAndMinute_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                hourAndMinute_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              rollTimes_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              intervalTime_ = input.readInt32();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000080;
              color_ = input.readBytes();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              showType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          hourAndMinute_ = java.util.Collections.unmodifiableList(hourAndMinute_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_MarqueePROTO_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_MarqueePROTO_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.class, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder.class);
    }

    public static com.google.protobuf.Parser<MarqueePROTO> PARSER =
        new com.google.protobuf.AbstractParser<MarqueePROTO>() {
      public MarqueePROTO parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MarqueePROTO(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MarqueePROTO> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 跑马灯ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 跑马灯ID
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // required string msg = 2;
    public static final int MSG_FIELD_NUMBER = 2;
    private java.lang.Object msg_;
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     * 跑马灯内容
     * </pre>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     * 跑马灯内容
     * </pre>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string msg = 2;</code>
     *
     * <pre>
     * 跑马灯内容
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <code>required int32 type = 3;</code>
     *
     * <pre>
     * 类型  2:绝对时间一次发送  3:按设定重复发送
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 type = 3;</code>
     *
     * <pre>
     * 类型  2:绝对时间一次发送  3:按设定重复发送
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional int32 weeklyRepeat = 4;
    public static final int WEEKLYREPEAT_FIELD_NUMBER = 4;
    private int weeklyRepeat_;
    /**
     * <code>optional int32 weeklyRepeat = 4;</code>
     *
     * <pre>
     * 每周重复 一周从周日开始 后7位进行标识 0000000~1111111用于表示周几会显示
     * </pre>
     */
    public boolean hasWeeklyRepeat() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 weeklyRepeat = 4;</code>
     *
     * <pre>
     * 每周重复 一周从周日开始 后7位进行标识 0000000~1111111用于表示周几会显示
     * </pre>
     */
    public int getWeeklyRepeat() {
      return weeklyRepeat_;
    }

    // optional int64 absoluteDate = 5;
    public static final int ABSOLUTEDATE_FIELD_NUMBER = 5;
    private long absoluteDate_;
    /**
     * <code>optional int64 absoluteDate = 5;</code>
     *
     * <pre>
     * 绝对时间发送的日期 具体时间 毫秒值
     * </pre>
     */
    public boolean hasAbsoluteDate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 absoluteDate = 5;</code>
     *
     * <pre>
     * 绝对时间发送的日期 具体时间 毫秒值
     * </pre>
     */
    public long getAbsoluteDate() {
      return absoluteDate_;
    }

    // repeated int64 hourAndMinute = 6;
    public static final int HOURANDMINUTE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> hourAndMinute_;
    /**
     * <code>repeated int64 hourAndMinute = 6;</code>
     *
     * <pre>
     * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getHourAndMinuteList() {
      return hourAndMinute_;
    }
    /**
     * <code>repeated int64 hourAndMinute = 6;</code>
     *
     * <pre>
     * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
     * </pre>
     */
    public int getHourAndMinuteCount() {
      return hourAndMinute_.size();
    }
    /**
     * <code>repeated int64 hourAndMinute = 6;</code>
     *
     * <pre>
     * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
     * </pre>
     */
    public long getHourAndMinute(int index) {
      return hourAndMinute_.get(index);
    }

    // optional int32 rollTimes = 7;
    public static final int ROLLTIMES_FIELD_NUMBER = 7;
    private int rollTimes_;
    /**
     * <code>optional int32 rollTimes = 7;</code>
     *
     * <pre>
     * 滚动次数
     * </pre>
     */
    public boolean hasRollTimes() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 rollTimes = 7;</code>
     *
     * <pre>
     * 滚动次数
     * </pre>
     */
    public int getRollTimes() {
      return rollTimes_;
    }

    // optional int32 intervalTime = 8;
    public static final int INTERVALTIME_FIELD_NUMBER = 8;
    private int intervalTime_;
    /**
     * <code>optional int32 intervalTime = 8;</code>
     *
     * <pre>
     * 间隔时间秒
     * </pre>
     */
    public boolean hasIntervalTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 intervalTime = 8;</code>
     *
     * <pre>
     * 间隔时间秒
     * </pre>
     */
    public int getIntervalTime() {
      return intervalTime_;
    }

    // optional string color = 9;
    public static final int COLOR_FIELD_NUMBER = 9;
    private java.lang.Object color_;
    /**
     * <code>optional string color = 9;</code>
     *
     * <pre>
     * 颜色
     * </pre>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string color = 9;</code>
     *
     * <pre>
     * 颜色
     * </pre>
     */
    public java.lang.String getColor() {
      java.lang.Object ref = color_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          color_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string color = 9;</code>
     *
     * <pre>
     * 颜色
     * </pre>
     */
    public com.google.protobuf.ByteString
        getColorBytes() {
      java.lang.Object ref = color_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        color_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 showType = 10;
    public static final int SHOWTYPE_FIELD_NUMBER = 10;
    private int showType_;
    /**
     * <code>required int32 showType = 10;</code>
     *
     * <pre>
     * 可以显示的场景
     * </pre>
     */
    public boolean hasShowType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 showType = 10;</code>
     *
     * <pre>
     * 可以显示的场景
     * </pre>
     */
    public int getShowType() {
      return showType_;
    }

    private void initFields() {
      id_ = 0L;
      msg_ = "";
      type_ = 0;
      weeklyRepeat_ = 0;
      absoluteDate_ = 0L;
      hourAndMinute_ = java.util.Collections.emptyList();
      rollTimes_ = 0;
      intervalTime_ = 0;
      color_ = "";
      showType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsg()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShowType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, type_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, weeklyRepeat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, absoluteDate_);
      }
      for (int i = 0; i < hourAndMinute_.size(); i++) {
        output.writeInt64(6, hourAndMinute_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, rollTimes_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, intervalTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getColorBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, showType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, type_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, weeklyRepeat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, absoluteDate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hourAndMinute_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(hourAndMinute_.get(i));
        }
        size += dataSize;
        size += 1 * getHourAndMinuteList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, rollTimes_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, intervalTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getColorBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, showType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kodgames.message.proto.marquee.MarqueePROTO}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_MarqueePROTO_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_MarqueePROTO_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.class, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder.class);
      }

      // Construct using com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        weeklyRepeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        absoluteDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        hourAndMinute_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        rollTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        intervalTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        color_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        showType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_MarqueePROTO_descriptor;
      }

      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO getDefaultInstanceForType() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.getDefaultInstance();
      }

      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO build() {
        com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO buildPartial() {
        com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO result = new com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.msg_ = msg_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.weeklyRepeat_ = weeklyRepeat_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.absoluteDate_ = absoluteDate_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          hourAndMinute_ = java.util.Collections.unmodifiableList(hourAndMinute_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.hourAndMinute_ = hourAndMinute_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rollTimes_ = rollTimes_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.intervalTime_ = intervalTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.color_ = color_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.showType_ = showType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO) {
          return mergeFrom((com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO other) {
        if (other == com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000002;
          msg_ = other.msg_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasWeeklyRepeat()) {
          setWeeklyRepeat(other.getWeeklyRepeat());
        }
        if (other.hasAbsoluteDate()) {
          setAbsoluteDate(other.getAbsoluteDate());
        }
        if (!other.hourAndMinute_.isEmpty()) {
          if (hourAndMinute_.isEmpty()) {
            hourAndMinute_ = other.hourAndMinute_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureHourAndMinuteIsMutable();
            hourAndMinute_.addAll(other.hourAndMinute_);
          }
          onChanged();
        }
        if (other.hasRollTimes()) {
          setRollTimes(other.getRollTimes());
        }
        if (other.hasIntervalTime()) {
          setIntervalTime(other.getIntervalTime());
        }
        if (other.hasColor()) {
          bitField0_ |= 0x00000100;
          color_ = other.color_;
          onChanged();
        }
        if (other.hasShowType()) {
          setShowType(other.getShowType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasMsg()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasShowType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 id = 1;
      private long id_ ;
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 跑马灯ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 跑马灯ID
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 跑马灯ID
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 跑马灯ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // required string msg = 2;
      private java.lang.Object msg_ = "";
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       * 跑马灯内容
       * </pre>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       * 跑马灯内容
       * </pre>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       * 跑马灯内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       * 跑马灯内容
       * </pre>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       * 跑马灯内容
       * </pre>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>required string msg = 2;</code>
       *
       * <pre>
       * 跑马灯内容
       * </pre>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msg_ = value;
        onChanged();
        return this;
      }

      // required int32 type = 3;
      private int type_ ;
      /**
       * <code>required int32 type = 3;</code>
       *
       * <pre>
       * 类型  2:绝对时间一次发送  3:按设定重复发送
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 type = 3;</code>
       *
       * <pre>
       * 类型  2:绝对时间一次发送  3:按设定重复发送
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 3;</code>
       *
       * <pre>
       * 类型  2:绝对时间一次发送  3:按设定重复发送
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 3;</code>
       *
       * <pre>
       * 类型  2:绝对时间一次发送  3:按设定重复发送
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 weeklyRepeat = 4;
      private int weeklyRepeat_ ;
      /**
       * <code>optional int32 weeklyRepeat = 4;</code>
       *
       * <pre>
       * 每周重复 一周从周日开始 后7位进行标识 0000000~1111111用于表示周几会显示
       * </pre>
       */
      public boolean hasWeeklyRepeat() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 weeklyRepeat = 4;</code>
       *
       * <pre>
       * 每周重复 一周从周日开始 后7位进行标识 0000000~1111111用于表示周几会显示
       * </pre>
       */
      public int getWeeklyRepeat() {
        return weeklyRepeat_;
      }
      /**
       * <code>optional int32 weeklyRepeat = 4;</code>
       *
       * <pre>
       * 每周重复 一周从周日开始 后7位进行标识 0000000~1111111用于表示周几会显示
       * </pre>
       */
      public Builder setWeeklyRepeat(int value) {
        bitField0_ |= 0x00000008;
        weeklyRepeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 weeklyRepeat = 4;</code>
       *
       * <pre>
       * 每周重复 一周从周日开始 后7位进行标识 0000000~1111111用于表示周几会显示
       * </pre>
       */
      public Builder clearWeeklyRepeat() {
        bitField0_ = (bitField0_ & ~0x00000008);
        weeklyRepeat_ = 0;
        onChanged();
        return this;
      }

      // optional int64 absoluteDate = 5;
      private long absoluteDate_ ;
      /**
       * <code>optional int64 absoluteDate = 5;</code>
       *
       * <pre>
       * 绝对时间发送的日期 具体时间 毫秒值
       * </pre>
       */
      public boolean hasAbsoluteDate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 absoluteDate = 5;</code>
       *
       * <pre>
       * 绝对时间发送的日期 具体时间 毫秒值
       * </pre>
       */
      public long getAbsoluteDate() {
        return absoluteDate_;
      }
      /**
       * <code>optional int64 absoluteDate = 5;</code>
       *
       * <pre>
       * 绝对时间发送的日期 具体时间 毫秒值
       * </pre>
       */
      public Builder setAbsoluteDate(long value) {
        bitField0_ |= 0x00000010;
        absoluteDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 absoluteDate = 5;</code>
       *
       * <pre>
       * 绝对时间发送的日期 具体时间 毫秒值
       * </pre>
       */
      public Builder clearAbsoluteDate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        absoluteDate_ = 0L;
        onChanged();
        return this;
      }

      // repeated int64 hourAndMinute = 6;
      private java.util.List<java.lang.Long> hourAndMinute_ = java.util.Collections.emptyList();
      private void ensureHourAndMinuteIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          hourAndMinute_ = new java.util.ArrayList<java.lang.Long>(hourAndMinute_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int64 hourAndMinute = 6;</code>
       *
       * <pre>
       * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getHourAndMinuteList() {
        return java.util.Collections.unmodifiableList(hourAndMinute_);
      }
      /**
       * <code>repeated int64 hourAndMinute = 6;</code>
       *
       * <pre>
       * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
       * </pre>
       */
      public int getHourAndMinuteCount() {
        return hourAndMinute_.size();
      }
      /**
       * <code>repeated int64 hourAndMinute = 6;</code>
       *
       * <pre>
       * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
       * </pre>
       */
      public long getHourAndMinute(int index) {
        return hourAndMinute_.get(index);
      }
      /**
       * <code>repeated int64 hourAndMinute = 6;</code>
       *
       * <pre>
       * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
       * </pre>
       */
      public Builder setHourAndMinute(
          int index, long value) {
        ensureHourAndMinuteIsMutable();
        hourAndMinute_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 hourAndMinute = 6;</code>
       *
       * <pre>
       * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
       * </pre>
       */
      public Builder addHourAndMinute(long value) {
        ensureHourAndMinuteIsMutable();
        hourAndMinute_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 hourAndMinute = 6;</code>
       *
       * <pre>
       * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
       * </pre>
       */
      public Builder addAllHourAndMinute(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureHourAndMinuteIsMutable();
        super.addAll(values, hourAndMinute_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 hourAndMinute = 6;</code>
       *
       * <pre>
       * 具体的小时&amp;分钟毫秒值只有重复发送的时候会用到
       * </pre>
       */
      public Builder clearHourAndMinute() {
        hourAndMinute_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 rollTimes = 7;
      private int rollTimes_ ;
      /**
       * <code>optional int32 rollTimes = 7;</code>
       *
       * <pre>
       * 滚动次数
       * </pre>
       */
      public boolean hasRollTimes() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 rollTimes = 7;</code>
       *
       * <pre>
       * 滚动次数
       * </pre>
       */
      public int getRollTimes() {
        return rollTimes_;
      }
      /**
       * <code>optional int32 rollTimes = 7;</code>
       *
       * <pre>
       * 滚动次数
       * </pre>
       */
      public Builder setRollTimes(int value) {
        bitField0_ |= 0x00000040;
        rollTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rollTimes = 7;</code>
       *
       * <pre>
       * 滚动次数
       * </pre>
       */
      public Builder clearRollTimes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rollTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 intervalTime = 8;
      private int intervalTime_ ;
      /**
       * <code>optional int32 intervalTime = 8;</code>
       *
       * <pre>
       * 间隔时间秒
       * </pre>
       */
      public boolean hasIntervalTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 intervalTime = 8;</code>
       *
       * <pre>
       * 间隔时间秒
       * </pre>
       */
      public int getIntervalTime() {
        return intervalTime_;
      }
      /**
       * <code>optional int32 intervalTime = 8;</code>
       *
       * <pre>
       * 间隔时间秒
       * </pre>
       */
      public Builder setIntervalTime(int value) {
        bitField0_ |= 0x00000080;
        intervalTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 intervalTime = 8;</code>
       *
       * <pre>
       * 间隔时间秒
       * </pre>
       */
      public Builder clearIntervalTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        intervalTime_ = 0;
        onChanged();
        return this;
      }

      // optional string color = 9;
      private java.lang.Object color_ = "";
      /**
       * <code>optional string color = 9;</code>
       *
       * <pre>
       * 颜色
       * </pre>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string color = 9;</code>
       *
       * <pre>
       * 颜色
       * </pre>
       */
      public java.lang.String getColor() {
        java.lang.Object ref = color_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          color_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string color = 9;</code>
       *
       * <pre>
       * 颜色
       * </pre>
       */
      public com.google.protobuf.ByteString
          getColorBytes() {
        java.lang.Object ref = color_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          color_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string color = 9;</code>
       *
       * <pre>
       * 颜色
       * </pre>
       */
      public Builder setColor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        color_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string color = 9;</code>
       *
       * <pre>
       * 颜色
       * </pre>
       */
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000100);
        color_ = getDefaultInstance().getColor();
        onChanged();
        return this;
      }
      /**
       * <code>optional string color = 9;</code>
       *
       * <pre>
       * 颜色
       * </pre>
       */
      public Builder setColorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        color_ = value;
        onChanged();
        return this;
      }

      // required int32 showType = 10;
      private int showType_ ;
      /**
       * <code>required int32 showType = 10;</code>
       *
       * <pre>
       * 可以显示的场景
       * </pre>
       */
      public boolean hasShowType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 showType = 10;</code>
       *
       * <pre>
       * 可以显示的场景
       * </pre>
       */
      public int getShowType() {
        return showType_;
      }
      /**
       * <code>required int32 showType = 10;</code>
       *
       * <pre>
       * 可以显示的场景
       * </pre>
       */
      public Builder setShowType(int value) {
        bitField0_ |= 0x00000200;
        showType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 showType = 10;</code>
       *
       * <pre>
       * 可以显示的场景
       * </pre>
       */
      public Builder clearShowType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        showType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kodgames.message.proto.marquee.MarqueePROTO)
    }

    static {
      defaultInstance = new MarqueePROTO(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kodgames.message.proto.marquee.MarqueePROTO)
  }

  public interface GCMarqueeVersionSYNCOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 version = 1;
    /**
     * <code>required int64 version = 1;</code>
     *
     * <pre>
     * 版本同步 登陆&amp;版本改变时发送
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required int64 version = 1;</code>
     *
     * <pre>
     * 版本同步 登陆&amp;版本改变时发送
     * </pre>
     */
    long getVersion();

    // required int32 opType = 2;
    /**
     * <code>required int32 opType = 2;</code>
     *
     * <pre>
     * 操作类型
     * </pre>
     */
    boolean hasOpType();
    /**
     * <code>required int32 opType = 2;</code>
     *
     * <pre>
     * 操作类型
     * </pre>
     */
    int getOpType();

    // required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;
    /**
     * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
     *
     * <pre>
     * 跑马灯信息
     * </pre>
     */
    boolean hasMarquee();
    /**
     * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
     *
     * <pre>
     * 跑马灯信息
     * </pre>
     */
    com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO getMarquee();
    /**
     * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
     *
     * <pre>
     * 跑马灯信息
     * </pre>
     */
    com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder getMarqueeOrBuilder();
  }
  /**
   * Protobuf type {@code com.kodgames.message.proto.marquee.GCMarqueeVersionSYNC}
   */
  public static final class GCMarqueeVersionSYNC extends
      com.google.protobuf.GeneratedMessage
      implements GCMarqueeVersionSYNCOrBuilder {
    // Use GCMarqueeVersionSYNC.newBuilder() to construct.
    private GCMarqueeVersionSYNC(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GCMarqueeVersionSYNC(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GCMarqueeVersionSYNC defaultInstance;
    public static GCMarqueeVersionSYNC getDefaultInstance() {
      return defaultInstance;
    }

    public GCMarqueeVersionSYNC getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GCMarqueeVersionSYNC(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              opType_ = input.readInt32();
              break;
            }
            case 26: {
              com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = marquee_.toBuilder();
              }
              marquee_ = input.readMessage(com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(marquee_);
                marquee_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_GCMarqueeVersionSYNC_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_GCMarqueeVersionSYNC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC.class, com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC.Builder.class);
    }

    public static com.google.protobuf.Parser<GCMarqueeVersionSYNC> PARSER =
        new com.google.protobuf.AbstractParser<GCMarqueeVersionSYNC>() {
      public GCMarqueeVersionSYNC parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCMarqueeVersionSYNC(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GCMarqueeVersionSYNC> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private long version_;
    /**
     * <code>required int64 version = 1;</code>
     *
     * <pre>
     * 版本同步 登陆&amp;版本改变时发送
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 version = 1;</code>
     *
     * <pre>
     * 版本同步 登陆&amp;版本改变时发送
     * </pre>
     */
    public long getVersion() {
      return version_;
    }

    // required int32 opType = 2;
    public static final int OPTYPE_FIELD_NUMBER = 2;
    private int opType_;
    /**
     * <code>required int32 opType = 2;</code>
     *
     * <pre>
     * 操作类型
     * </pre>
     */
    public boolean hasOpType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 opType = 2;</code>
     *
     * <pre>
     * 操作类型
     * </pre>
     */
    public int getOpType() {
      return opType_;
    }

    // required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;
    public static final int MARQUEE_FIELD_NUMBER = 3;
    private com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO marquee_;
    /**
     * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
     *
     * <pre>
     * 跑马灯信息
     * </pre>
     */
    public boolean hasMarquee() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
     *
     * <pre>
     * 跑马灯信息
     * </pre>
     */
    public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO getMarquee() {
      return marquee_;
    }
    /**
     * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
     *
     * <pre>
     * 跑马灯信息
     * </pre>
     */
    public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder getMarqueeOrBuilder() {
      return marquee_;
    }

    private void initFields() {
      version_ = 0L;
      opType_ = 0;
      marquee_ = com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOpType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMarquee()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMarquee().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, opType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, marquee_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, opType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, marquee_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kodgames.message.proto.marquee.GCMarqueeVersionSYNC}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNCOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_GCMarqueeVersionSYNC_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_GCMarqueeVersionSYNC_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC.class, com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC.Builder.class);
      }

      // Construct using com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMarqueeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        opType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (marqueeBuilder_ == null) {
          marquee_ = com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.getDefaultInstance();
        } else {
          marqueeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_GCMarqueeVersionSYNC_descriptor;
      }

      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC getDefaultInstanceForType() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC.getDefaultInstance();
      }

      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC build() {
        com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC buildPartial() {
        com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC result = new com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opType_ = opType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (marqueeBuilder_ == null) {
          result.marquee_ = marquee_;
        } else {
          result.marquee_ = marqueeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC) {
          return mergeFrom((com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC other) {
        if (other == com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasOpType()) {
          setOpType(other.getOpType());
        }
        if (other.hasMarquee()) {
          mergeMarquee(other.getMarquee());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasOpType()) {
          
          return false;
        }
        if (!hasMarquee()) {
          
          return false;
        }
        if (!getMarquee().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeVersionSYNC) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 version = 1;
      private long version_ ;
      /**
       * <code>required int64 version = 1;</code>
       *
       * <pre>
       * 版本同步 登陆&amp;版本改变时发送
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 version = 1;</code>
       *
       * <pre>
       * 版本同步 登陆&amp;版本改变时发送
       * </pre>
       */
      public long getVersion() {
        return version_;
      }
      /**
       * <code>required int64 version = 1;</code>
       *
       * <pre>
       * 版本同步 登陆&amp;版本改变时发送
       * </pre>
       */
      public Builder setVersion(long value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 version = 1;</code>
       *
       * <pre>
       * 版本同步 登陆&amp;版本改变时发送
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0L;
        onChanged();
        return this;
      }

      // required int32 opType = 2;
      private int opType_ ;
      /**
       * <code>required int32 opType = 2;</code>
       *
       * <pre>
       * 操作类型
       * </pre>
       */
      public boolean hasOpType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 opType = 2;</code>
       *
       * <pre>
       * 操作类型
       * </pre>
       */
      public int getOpType() {
        return opType_;
      }
      /**
       * <code>required int32 opType = 2;</code>
       *
       * <pre>
       * 操作类型
       * </pre>
       */
      public Builder setOpType(int value) {
        bitField0_ |= 0x00000002;
        opType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 opType = 2;</code>
       *
       * <pre>
       * 操作类型
       * </pre>
       */
      public Builder clearOpType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        opType_ = 0;
        onChanged();
        return this;
      }

      // required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;
      private com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO marquee_ = com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder> marqueeBuilder_;
      /**
       * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
       *
       * <pre>
       * 跑马灯信息
       * </pre>
       */
      public boolean hasMarquee() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
       *
       * <pre>
       * 跑马灯信息
       * </pre>
       */
      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO getMarquee() {
        if (marqueeBuilder_ == null) {
          return marquee_;
        } else {
          return marqueeBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
       *
       * <pre>
       * 跑马灯信息
       * </pre>
       */
      public Builder setMarquee(com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO value) {
        if (marqueeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          marquee_ = value;
          onChanged();
        } else {
          marqueeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
       *
       * <pre>
       * 跑马灯信息
       * </pre>
       */
      public Builder setMarquee(
          com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder builderForValue) {
        if (marqueeBuilder_ == null) {
          marquee_ = builderForValue.build();
          onChanged();
        } else {
          marqueeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
       *
       * <pre>
       * 跑马灯信息
       * </pre>
       */
      public Builder mergeMarquee(com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO value) {
        if (marqueeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              marquee_ != com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.getDefaultInstance()) {
            marquee_ =
              com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.newBuilder(marquee_).mergeFrom(value).buildPartial();
          } else {
            marquee_ = value;
          }
          onChanged();
        } else {
          marqueeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
       *
       * <pre>
       * 跑马灯信息
       * </pre>
       */
      public Builder clearMarquee() {
        if (marqueeBuilder_ == null) {
          marquee_ = com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.getDefaultInstance();
          onChanged();
        } else {
          marqueeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
       *
       * <pre>
       * 跑马灯信息
       * </pre>
       */
      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder getMarqueeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMarqueeFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
       *
       * <pre>
       * 跑马灯信息
       * </pre>
       */
      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder getMarqueeOrBuilder() {
        if (marqueeBuilder_ != null) {
          return marqueeBuilder_.getMessageOrBuilder();
        } else {
          return marquee_;
        }
      }
      /**
       * <code>required .com.kodgames.message.proto.marquee.MarqueePROTO marquee = 3;</code>
       *
       * <pre>
       * 跑马灯信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder> 
          getMarqueeFieldBuilder() {
        if (marqueeBuilder_ == null) {
          marqueeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder>(
                  marquee_,
                  getParentForChildren(),
                  isClean());
          marquee_ = null;
        }
        return marqueeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.kodgames.message.proto.marquee.GCMarqueeVersionSYNC)
    }

    static {
      defaultInstance = new GCMarqueeVersionSYNC(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kodgames.message.proto.marquee.GCMarqueeVersionSYNC)
  }

  public interface CGMarqueeREQOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 version = 1;
    /**
     * <code>optional int64 version = 1;</code>
     *
     * <pre>
     * 版本号 用于可能会有增量更新
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>optional int64 version = 1;</code>
     *
     * <pre>
     * 版本号 用于可能会有增量更新
     * </pre>
     */
    long getVersion();
  }
  /**
   * Protobuf type {@code com.kodgames.message.proto.marquee.CGMarqueeREQ}
   */
  public static final class CGMarqueeREQ extends
      com.google.protobuf.GeneratedMessage
      implements CGMarqueeREQOrBuilder {
    // Use CGMarqueeREQ.newBuilder() to construct.
    private CGMarqueeREQ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGMarqueeREQ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGMarqueeREQ defaultInstance;
    public static CGMarqueeREQ getDefaultInstance() {
      return defaultInstance;
    }

    public CGMarqueeREQ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGMarqueeREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_CGMarqueeREQ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_CGMarqueeREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ.class, com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ.Builder.class);
    }

    public static com.google.protobuf.Parser<CGMarqueeREQ> PARSER =
        new com.google.protobuf.AbstractParser<CGMarqueeREQ>() {
      public CGMarqueeREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGMarqueeREQ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGMarqueeREQ> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private long version_;
    /**
     * <code>optional int64 version = 1;</code>
     *
     * <pre>
     * 版本号 用于可能会有增量更新
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 version = 1;</code>
     *
     * <pre>
     * 版本号 用于可能会有增量更新
     * </pre>
     */
    public long getVersion() {
      return version_;
    }

    private void initFields() {
      version_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, version_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, version_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kodgames.message.proto.marquee.CGMarqueeREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_CGMarqueeREQ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_CGMarqueeREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ.class, com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ.Builder.class);
      }

      // Construct using com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_CGMarqueeREQ_descriptor;
      }

      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ getDefaultInstanceForType() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ.getDefaultInstance();
      }

      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ build() {
        com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ buildPartial() {
        com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ result = new com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ) {
          return mergeFrom((com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ other) {
        if (other == com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kodgames.message.proto.marquee.MarqueeProtoBuf.CGMarqueeREQ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 version = 1;
      private long version_ ;
      /**
       * <code>optional int64 version = 1;</code>
       *
       * <pre>
       * 版本号 用于可能会有增量更新
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 version = 1;</code>
       *
       * <pre>
       * 版本号 用于可能会有增量更新
       * </pre>
       */
      public long getVersion() {
        return version_;
      }
      /**
       * <code>optional int64 version = 1;</code>
       *
       * <pre>
       * 版本号 用于可能会有增量更新
       * </pre>
       */
      public Builder setVersion(long value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 version = 1;</code>
       *
       * <pre>
       * 版本号 用于可能会有增量更新
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kodgames.message.proto.marquee.CGMarqueeREQ)
    }

    static {
      defaultInstance = new CGMarqueeREQ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kodgames.message.proto.marquee.CGMarqueeREQ)
  }

  public interface GCMarqueeRESOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 version = 1;
    /**
     * <code>required int64 version = 1;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required int64 version = 1;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    long getVersion();

    // repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;
    /**
     * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
     *
     * <pre>
     * 跑马灯列表
     * </pre>
     */
    java.util.List<com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO> 
        getMarqueesList();
    /**
     * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
     *
     * <pre>
     * 跑马灯列表
     * </pre>
     */
    com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO getMarquees(int index);
    /**
     * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
     *
     * <pre>
     * 跑马灯列表
     * </pre>
     */
    int getMarqueesCount();
    /**
     * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
     *
     * <pre>
     * 跑马灯列表
     * </pre>
     */
    java.util.List<? extends com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder> 
        getMarqueesOrBuilderList();
    /**
     * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
     *
     * <pre>
     * 跑马灯列表
     * </pre>
     */
    com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder getMarqueesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.kodgames.message.proto.marquee.GCMarqueeRES}
   */
  public static final class GCMarqueeRES extends
      com.google.protobuf.GeneratedMessage
      implements GCMarqueeRESOrBuilder {
    // Use GCMarqueeRES.newBuilder() to construct.
    private GCMarqueeRES(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GCMarqueeRES(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GCMarqueeRES defaultInstance;
    public static GCMarqueeRES getDefaultInstance() {
      return defaultInstance;
    }

    public GCMarqueeRES getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GCMarqueeRES(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                marquees_ = new java.util.ArrayList<com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO>();
                mutable_bitField0_ |= 0x00000002;
              }
              marquees_.add(input.readMessage(com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          marquees_ = java.util.Collections.unmodifiableList(marquees_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_GCMarqueeRES_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_GCMarqueeRES_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES.class, com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES.Builder.class);
    }

    public static com.google.protobuf.Parser<GCMarqueeRES> PARSER =
        new com.google.protobuf.AbstractParser<GCMarqueeRES>() {
      public GCMarqueeRES parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCMarqueeRES(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GCMarqueeRES> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private long version_;
    /**
     * <code>required int64 version = 1;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 version = 1;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    public long getVersion() {
      return version_;
    }

    // repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;
    public static final int MARQUEES_FIELD_NUMBER = 2;
    private java.util.List<com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO> marquees_;
    /**
     * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
     *
     * <pre>
     * 跑马灯列表
     * </pre>
     */
    public java.util.List<com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO> getMarqueesList() {
      return marquees_;
    }
    /**
     * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
     *
     * <pre>
     * 跑马灯列表
     * </pre>
     */
    public java.util.List<? extends com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder> 
        getMarqueesOrBuilderList() {
      return marquees_;
    }
    /**
     * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
     *
     * <pre>
     * 跑马灯列表
     * </pre>
     */
    public int getMarqueesCount() {
      return marquees_.size();
    }
    /**
     * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
     *
     * <pre>
     * 跑马灯列表
     * </pre>
     */
    public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO getMarquees(int index) {
      return marquees_.get(index);
    }
    /**
     * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
     *
     * <pre>
     * 跑马灯列表
     * </pre>
     */
    public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder getMarqueesOrBuilder(
        int index) {
      return marquees_.get(index);
    }

    private void initFields() {
      version_ = 0L;
      marquees_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMarqueesCount(); i++) {
        if (!getMarquees(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, version_);
      }
      for (int i = 0; i < marquees_.size(); i++) {
        output.writeMessage(2, marquees_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, version_);
      }
      for (int i = 0; i < marquees_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, marquees_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kodgames.message.proto.marquee.GCMarqueeRES}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRESOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_GCMarqueeRES_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_GCMarqueeRES_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES.class, com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES.Builder.class);
      }

      // Construct using com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMarqueesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (marqueesBuilder_ == null) {
          marquees_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          marqueesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.internal_static_com_kodgames_message_proto_marquee_GCMarqueeRES_descriptor;
      }

      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES getDefaultInstanceForType() {
        return com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES.getDefaultInstance();
      }

      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES build() {
        com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES buildPartial() {
        com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES result = new com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (marqueesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            marquees_ = java.util.Collections.unmodifiableList(marquees_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.marquees_ = marquees_;
        } else {
          result.marquees_ = marqueesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES) {
          return mergeFrom((com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES other) {
        if (other == com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (marqueesBuilder_ == null) {
          if (!other.marquees_.isEmpty()) {
            if (marquees_.isEmpty()) {
              marquees_ = other.marquees_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMarqueesIsMutable();
              marquees_.addAll(other.marquees_);
            }
            onChanged();
          }
        } else {
          if (!other.marquees_.isEmpty()) {
            if (marqueesBuilder_.isEmpty()) {
              marqueesBuilder_.dispose();
              marqueesBuilder_ = null;
              marquees_ = other.marquees_;
              bitField0_ = (bitField0_ & ~0x00000002);
              marqueesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMarqueesFieldBuilder() : null;
            } else {
              marqueesBuilder_.addAllMessages(other.marquees_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        for (int i = 0; i < getMarqueesCount(); i++) {
          if (!getMarquees(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kodgames.message.proto.marquee.MarqueeProtoBuf.GCMarqueeRES) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 version = 1;
      private long version_ ;
      /**
       * <code>required int64 version = 1;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 version = 1;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public long getVersion() {
        return version_;
      }
      /**
       * <code>required int64 version = 1;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public Builder setVersion(long value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 version = 1;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0L;
        onChanged();
        return this;
      }

      // repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;
      private java.util.List<com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO> marquees_ =
        java.util.Collections.emptyList();
      private void ensureMarqueesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          marquees_ = new java.util.ArrayList<com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO>(marquees_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder> marqueesBuilder_;

      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public java.util.List<com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO> getMarqueesList() {
        if (marqueesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(marquees_);
        } else {
          return marqueesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public int getMarqueesCount() {
        if (marqueesBuilder_ == null) {
          return marquees_.size();
        } else {
          return marqueesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO getMarquees(int index) {
        if (marqueesBuilder_ == null) {
          return marquees_.get(index);
        } else {
          return marqueesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public Builder setMarquees(
          int index, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO value) {
        if (marqueesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMarqueesIsMutable();
          marquees_.set(index, value);
          onChanged();
        } else {
          marqueesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public Builder setMarquees(
          int index, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder builderForValue) {
        if (marqueesBuilder_ == null) {
          ensureMarqueesIsMutable();
          marquees_.set(index, builderForValue.build());
          onChanged();
        } else {
          marqueesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public Builder addMarquees(com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO value) {
        if (marqueesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMarqueesIsMutable();
          marquees_.add(value);
          onChanged();
        } else {
          marqueesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public Builder addMarquees(
          int index, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO value) {
        if (marqueesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMarqueesIsMutable();
          marquees_.add(index, value);
          onChanged();
        } else {
          marqueesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public Builder addMarquees(
          com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder builderForValue) {
        if (marqueesBuilder_ == null) {
          ensureMarqueesIsMutable();
          marquees_.add(builderForValue.build());
          onChanged();
        } else {
          marqueesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public Builder addMarquees(
          int index, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder builderForValue) {
        if (marqueesBuilder_ == null) {
          ensureMarqueesIsMutable();
          marquees_.add(index, builderForValue.build());
          onChanged();
        } else {
          marqueesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public Builder addAllMarquees(
          java.lang.Iterable<? extends com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO> values) {
        if (marqueesBuilder_ == null) {
          ensureMarqueesIsMutable();
          super.addAll(values, marquees_);
          onChanged();
        } else {
          marqueesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public Builder clearMarquees() {
        if (marqueesBuilder_ == null) {
          marquees_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          marqueesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public Builder removeMarquees(int index) {
        if (marqueesBuilder_ == null) {
          ensureMarqueesIsMutable();
          marquees_.remove(index);
          onChanged();
        } else {
          marqueesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder getMarqueesBuilder(
          int index) {
        return getMarqueesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder getMarqueesOrBuilder(
          int index) {
        if (marqueesBuilder_ == null) {
          return marquees_.get(index);  } else {
          return marqueesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public java.util.List<? extends com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder> 
           getMarqueesOrBuilderList() {
        if (marqueesBuilder_ != null) {
          return marqueesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(marquees_);
        }
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder addMarqueesBuilder() {
        return getMarqueesFieldBuilder().addBuilder(
            com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder addMarqueesBuilder(
          int index) {
        return getMarqueesFieldBuilder().addBuilder(
            index, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.getDefaultInstance());
      }
      /**
       * <code>repeated .com.kodgames.message.proto.marquee.MarqueePROTO marquees = 2;</code>
       *
       * <pre>
       * 跑马灯列表
       * </pre>
       */
      public java.util.List<com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder> 
           getMarqueesBuilderList() {
        return getMarqueesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder> 
          getMarqueesFieldBuilder() {
        if (marqueesBuilder_ == null) {
          marqueesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTO.Builder, com.kodgames.message.proto.marquee.MarqueeProtoBuf.MarqueePROTOOrBuilder>(
                  marquees_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          marquees_ = null;
        }
        return marqueesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.kodgames.message.proto.marquee.GCMarqueeRES)
    }

    static {
      defaultInstance = new GCMarqueeRES(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kodgames.message.proto.marquee.GCMarqueeRES)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kodgames_message_proto_marquee_MarqueePROTO_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kodgames_message_proto_marquee_MarqueePROTO_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kodgames_message_proto_marquee_GCMarqueeVersionSYNC_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kodgames_message_proto_marquee_GCMarqueeVersionSYNC_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kodgames_message_proto_marquee_CGMarqueeREQ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kodgames_message_proto_marquee_CGMarqueeREQ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kodgames_message_proto_marquee_GCMarqueeRES_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kodgames_message_proto_marquee_GCMarqueeRES_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026protobuf/marquee.proto\022\"com.kodgames.m" +
      "essage.proto.marquee\"\302\001\n\014MarqueePROTO\022\n\n" +
      "\002id\030\001 \002(\003\022\013\n\003msg\030\002 \002(\t\022\014\n\004type\030\003 \002(\005\022\024\n\014" +
      "weeklyRepeat\030\004 \001(\005\022\024\n\014absoluteDate\030\005 \001(\003" +
      "\022\025\n\rhourAndMinute\030\006 \003(\003\022\021\n\trollTimes\030\007 \001" +
      "(\005\022\024\n\014intervalTime\030\010 \001(\005\022\r\n\005color\030\t \001(\t\022" +
      "\020\n\010showType\030\n \002(\005\"z\n\024GCMarqueeVersionSYN" +
      "C\022\017\n\007version\030\001 \002(\003\022\016\n\006opType\030\002 \002(\005\022A\n\007ma" +
      "rquee\030\003 \002(\01320.com.kodgames.message.proto" +
      ".marquee.MarqueePROTO\"\037\n\014CGMarqueeREQ\022\017\n",
      "\007version\030\001 \001(\003\"c\n\014GCMarqueeRES\022\017\n\007versio" +
      "n\030\001 \002(\003\022B\n\010marquees\030\002 \003(\01320.com.kodgames" +
      ".message.proto.marquee.MarqueePROTOB\021B\017M" +
      "arqueeProtoBuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kodgames_message_proto_marquee_MarqueePROTO_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kodgames_message_proto_marquee_MarqueePROTO_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kodgames_message_proto_marquee_MarqueePROTO_descriptor,
              new java.lang.String[] { "Id", "Msg", "Type", "WeeklyRepeat", "AbsoluteDate", "HourAndMinute", "RollTimes", "IntervalTime", "Color", "ShowType", });
          internal_static_com_kodgames_message_proto_marquee_GCMarqueeVersionSYNC_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kodgames_message_proto_marquee_GCMarqueeVersionSYNC_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kodgames_message_proto_marquee_GCMarqueeVersionSYNC_descriptor,
              new java.lang.String[] { "Version", "OpType", "Marquee", });
          internal_static_com_kodgames_message_proto_marquee_CGMarqueeREQ_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kodgames_message_proto_marquee_CGMarqueeREQ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kodgames_message_proto_marquee_CGMarqueeREQ_descriptor,
              new java.lang.String[] { "Version", });
          internal_static_com_kodgames_message_proto_marquee_GCMarqueeRES_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_kodgames_message_proto_marquee_GCMarqueeRES_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kodgames_message_proto_marquee_GCMarqueeRES_descriptor,
              new java.lang.String[] { "Version", "Marquees", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
